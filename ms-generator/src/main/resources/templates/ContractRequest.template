package {{ contract.packageName }};

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

{% if contract.dateDeclared is defined %}
import java.sql.Timestamp;
{% endif %}
{% if contract.setDeclared is defined %}
import java.util.Set;
import java.util.HashSet;
{% endif %}
{% if contract.listDeclared is defined %}
import java.util.List;
import java.util.ArrayList;
{% endif %}


@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
public class {{ contract.className }} {

	{% if contract.idField is defined %}
	private {{contract.idFieldType}} {{contract.idFieldName}};
	{% endif %}

	
	{%- for field in contract.classfields  %}
	{% if field.isCollection is defined %}
	@Builder.Default
	private {{field.collectionDatatypeRequest}};
	public void addItem({{field.camelCaseDatatypeRequest}} item) {
        this.{{field.name}}.add(item);
    }
    {% elif field.isCustom is defined %}
    private {{field.camelCaseDatatypeRequest}} {{ field.name }};
	{% else %}
	private {{field.datatypeStringContract}} {{ field.name }};
	{% endif %}
	
	{%- endfor %}
	
}
